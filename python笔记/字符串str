#下标
name='laowang'

取第一个字符  name[0]
取最后一个字符  name[-1]

#切片
name[0:1]
name[0:]

name[0::2]  第三项是步长 
从前往后是   name[-1::-1]  从前往后      name[::-1]

capitalize(self, /)   首字母大写
casefold(self, /)   字母变小写，不限于英文
center(width, fillchar=' ', /)    字符居中，可以用字符填充
encode(self, /, encoding='utf-8', errors='strict')  编码
S.find(sub[, start[, end]]) -> int   查找，返回索引
S.index(sub[, start[, end]]) -> int  索引，找不到会报错
S.rindex(sub[, start[, end]]) -> int 右侧索引
S.count(sub[, start[, end]]) -> int  计算
replace(self, old, new, count=-1, /)  替换 默认替换所有
split(self, /, sep=None, maxsplit=-1) 切割，默认切割次数无限
splitlines(self, /, keepends=False)   一个文章按行分割
title(self, /)                        每个字母大写
S.startswith(prefix[, start[, end]]) -> bool 以什么开头
S.endswith(suffix[, start[, end]]) -> bool  以什么结尾
upper()         大写
lower()         小写
ljust(self, width, fillchar=' ', /) 左对齐
rjust(self, width, fillchar=' ', /) 右对齐
lstrip(self, chars=None, /)   左删除
rstrip(self, chars=None, /)   右删除
strip(self, chars=None, /)    左右删除
partition(self, sep, /)       从中间分开
rpartition(self, sep, /)      从右边找单词，之后分开
join(self, iterable, /)       字符加入可迭代内容中


